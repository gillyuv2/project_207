#########
# Step 1

Code affected: none

Created this file.


#########
# Step 2

Code affected: all .java files

Reformatted using the Google Java style formatter.

#########
# Step 3

Code affected: Pig.turnAround

Flaw: unnecessary if, leading to duplicate code.

Fix: replaced if statement with a single assignment statement.


##########
# Step 4

Code affected: Pig.clearStomach, Human.move, Egg.draw, Chicken.layegg, Chicken.digest

Flaw: unnecessary print statements in the methods. 

Fix: Commented all the print statements.

##########
# Step 5

Code affected: class Wind, Wind.windBlowingUp, Wind.windBlowingDown, class Main

Flaw: 1. Redundant code in methods windBlowingUp and windBlowingLeft, irrelevant doc strings, irrelevant method
         and variable names.
      2. Old names for wind methods.

Fix: 1. Created a general method for choosing the direction of the wind. Changed the name of Wind.windBlowingUp,
        Wind.windBlowingDown to Wind.horizontal and Wind.vertical.
     2. Created new meaningful variable, method names and doc strings. Changed the probablity of wind direction.
     3. Reset names of wind methods with the new ones.

##########
# Step 6

Code affected: new .java file named FarmMethods

Flaw: Repetitive code in other .java files

Fix: Created a super class with methods: 1.setLocation 2.getX 3.getY 4.setColor 5.getColor 6.drawString 7.draw
                                         8.setAppearance 9.getAppearance

##########
# Step 7

Code affected: .java files 1. AnimalManure 2. AnimalFood 3. Egg

Flaw: Unnecessary similar code: 1. Methods: setLocation, draw, drawString 2. Variable: x, y, appearance, colour

Fix: 1. Removed all the above mentioned methods along with their doc strings. Removed all the above mentioned unnecessary
        variables.
     2. Added constructor to Egg class and set its appearance with setAppearance method and set its color with
        setColor method.

##########
# Step 8

Code affected: .java files: 1. Human 2. Pig 3. Chicken 4. AnimalFood

Flaw: different method names, calls to public or protected variables y and color and methods.

Fix: 1. Fixed AnimalFood methods: 1.blownUp 2. blownDown 3. blownLeft 4. blownRight
        - removed changes to x and y as previously implemented.
        - used method setLocation and getX and getY and implemented the code to blow food up, down, left and right
          as per method names.
     2. Fixed calls to previously protected variable Y in Human, Pig and Chicken file and changed it with getY()
     3. Changed the calls to previously public variable 'colour' with the method getColor().

##########
# Step 9

Code affected: .java files: 1. Animals 2. Human 3. Pig 4. Chicken

Flaw: 1. Redundant code in Human, Pig and Chicken class.
      2. Methods and class variables are copied and pasted.
      3. Common Errors in the classes.

Fix: 1. Animals class with methods: 1. setManure 2. reverseAppearance 3. turnAround 4. digest.
        -Variables: 1. manure 2. horizontal 3. vertical 4. belly 5. target.
     2. Removed the redundant code from Human, Pig and Chicken.
     3. Replaced old variable names with getters and setters for co-ordinates x and y, color and
        appearance.
     4. Cleaned the redundant variables from the files.
     5. Removed unnecessary and irrelevant doc stings and comments.

##########
# Step 10

Code affected: .java file 1. Main 2. Human 3. Farm 4. Chicken 5. Pig

Flaw: public static array in human that is not useful for human.

Fix: 1. Created the public static array in different class Farm
     2. Changed the instances of the variable Human.myFarmAnimals with Farm.myFarmAnimals in the Human Farm and Chicken
        and Pig.

##########
# Step 11

Code affected: .java file 1. Main 2. Human 3. Farm 4. Chicken 5. Pig

Flaw: public static array in human that is not useful for human.

Fix: 1. Created the public static array in different class Farm
     2. Changed the instances of the variable Human.myFarmAnimals with Farm.myFarmAnimals in the Human Farm and Chicken
        and Pig.
     3. Created static lists that store Egg, AnimalFood and Animal Manure.
     4. These lists will eleminate the need to iterate over the empty array.

#########
# Step 12

Code Affected: .java file 1. Human

Flaw: 1. Eggs were not properly collected.
      2. Eggs were not removed properly from the screen.

Fix: 1. Changed the conditions of reaching target in move method. Added a way to remove the object from the eggList
        collection and the array that is used as grid in the main file to support the canvas.

#########
# Step 13

Code Affected: .java file 1. Chicken 2. Pig

Flaw: 1. Food was not properly collected.
      2. Food was not removed properly from the screen.

Fix: 1. Changed the conditions of reaching target in move method. Added a way to remove the object from the food list
        collection and the array that is used as grid in the main file to support the canvas.

#########
# Step 14

Code Affected: .java file 1. Chicken 2. Pig

Flaw: 1. Error in move condition. No maure was getting out. Then a lot of manure was coming out

Fix: 1. Fixed the move method for both of the move methods.

#########
# Step 14

Code Affected: .java file 1. Chicken 2. Pig

Flaw: 1. Error in move condition. No maure was getting out. Then a lot of manure was coming out

Fix: 1. Fixed the move method for both of the move methods.

#########
# Step 15

Code Affected: .java file 1. Animal

Flaw: 1. Unnecessary for loop in the methods foodLocator, eggLocator and manureLocator.
      2. Irrevelant if condition in the above three methods
      3. Access of the above three methods was public.

Fix: 1. Removed the for loops from the above mentioned three methods.
     2. Implemented new if conditions to check the size of the Farm.eggList, Farm.foodList and Farm.manureList.
     3. Made the access of the three methods package private.

#########
# Step 16

Code Affected: .java file 1. Farm

Flaw: 1. List access not packgae private for the eggList, foodList, manurelist.

Fix: 1. Made the access for the mentioned lists package private.

#########
# Step 17

Code Affected: .java file 1. Main 2. AnimalFood

Flaw: 1. Irrelevant use of the double d by creating it in the AnimalFood and then suing it in the Main class
      2. Unoptimized if statements.

Fix: 1. Removed the double d from the AnimalFood.
     2. Fixed the lolfood in the Main class and used the windHorizontal and windVertical methods properly to remove
        any unnecessary decalrations of the variables.

#########
# Step 18

Code Affected: .java 1. Chicken

Flaw: 1. Unnecessary variable named going right in the chicken class.
      2. Unnecessary Arraylist implementation of an unused list named basket.

Fix: 1. Removed the variable and every instantiation of the variable in the Chicken.java file.
     2. Removed the Arraylist from the file.

#########
# Step 19

Code Affected: .java 1. Pig

Flaw: 1. Unnecessary variable named going right in the chicken class.
      2. Unnecessary variable named g in the class.

Fix: 1. Removed the variable and every instantiation of the variable in the Chicken.java file.
     2. Removed the variable g from the file.

#########
# Step 20

Code Affected: .java files 1. PoopCollector 2. Main

Flaw: Nothing

Fix: 1. Added a new class PoopCollector that collects the manure in the farm.
     2. This class extends the animals and have all the same methods as the Animals.
     3. This class move methods uses the manure locator from the animals class and then finds the manure and collect it.
     4. Spawned the Cleaner1, Cleaner2 and Cleaner3. in the Main.java file.
     5. Added the move method call in the Main.java file.
     6. Added the draw method for the in the Main.java file.

#########
# Step 21

Code Affected: .java files 1. Main.java

Flaw: 1. Unnecessary Casting while spawning of the FarmMethods.

Fix: 1. Removed all the casting while spwaning.

#########
# Step 22

Code Affected: .java files 1. Wind.java

Flaw: Error in the values of the wind direction.

Fix: decreased the probability of movement of the wind.

#########
# Step 23

Code Affected: .java files 1. Animals

Flaw: Repetitive code for move in Pig and Chicken.

Fix: 1. Implemented the move method for the Animals file.
     2. Changed the specifics of the implantation of the move method by renaming the collector for the target.

#########
# Step 24

Code Affected: .java files 1. Pig 2. Chicken

Flaw: 1. Repetitive code for move in Pig and Chicken.
      2. Errors in Chicken while laying the egg.

Fix: 1. Removed the move method from the pig class.
     2. Modified the move in Chicken class by removing the similar code with the move from the Animals file and
        just adding the lay egg method for the Chicken and named it as chickenMove.

#########
# Step 25

Code Affected: .java files 1. FarmMethods

Flaw: 1. Errors for the already existing bounds of the FarmMethods's setLocation method.

Fix: 1. Changed the bounds for the setLocation methods in order to fix the location of the objects in the canvas frame.

##########
# Step 26:

Code Affected: .java files 1. AnimalManure 2. AnimalFood.

Flaw: 1. Were causing error in the proper graphics for the process of collecting the manure and the animal food by
         animals.

Fix: 1. Added the add method for the foodList in the AnimalFood on every instance of the AnimalFood.
     2. Added the add method for the maureList in the AnimalManure on every instance of the AnimalManure.

#########
# Step 27:

Code Affected: .java files 1. AnimalFood 2. AnimalManure 3. Egg

Flaw: 1. Flaws in the design of the constructor of the three files which causes the error and made makes code compilcated
         while instantiation of the constructor of the above objects in the Main.java

Fix: 1. Added the fields x and y for the location of the above objects and called the setLocation method to set the
        location of these objects.
     2. Set manure as well in all three classes.

#########
# Step 28:

Code Affected: .java files 1. Farm

Flaw: 1. Noting the file

Fix: 1. Added the ArrayLists such as foodList,  manureList and eggList.
       2. These lists help to find the target in the animals' find target method for all three methods such as
       eggLocator, maureLocator and the foodLocator.

########
# Step 29

Code Affected: .java files 1. Main

Flaw: 1. Error in running the move for Human

Fix: 1. Fixed the name with humanMove from the original name Move.

########
# Step 30:

Code Affected: .java 1. Animal

Flaw: Repetitive code in the move of human and poopCollector

Fix:1. In the move method put the speciifc instance to check which subclass uses it later.
    2. Added instances for the Human, PoopColelctor, Chicken and Pig.

##########
# Step 31:

Code Affected: .java files 1. Human 2. PoopCollector 3. Chicken 4. Pig

Flaw: 1. Errors in the proper functioning of the move function of these classes.

Fix: 1. Added the method humanMove used the move for animal and modified the Human's mybasket size to get the Egg counter
        correct counting.
     2. Implement the Chicken move method by calling the animal move and specification to lay egg.
     3. Removed the redundant move method for the Pig class.
     4. removed the redundant move mehtod for the PoopCollector class.

###########
# Step 32:

Code Affected: .java files 1. AnimalFood 2. AnimalManure 3. Animals 4. Chicken 5. Egg 6. Farm 7. FarmMethods
                           8. Human 9. Pig 10. PoopCollector 11. Wind

Flaw: 1. Unused Variables 2. Access Authentication Problems as indicated by the idea. 3. Unecessary Comments.

Fix:  1. Made all the changes to the methods of AnimalFood as indicated by the idea: 1. removed the unused variables.
        2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      2. Made all the changes to the methods of AnimalManure as indicated by the idea: 1. removed the unused variables.
             2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      3. Made all the changes to the methods of Animals as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      4. Made all the changes to the methods of Chicken as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      5. Made all the changes to the methods of Egg as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      6. Made all the changes to the methods of Farm as indicated by the idea: 1. removed the unused variables.
             2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      7. Made all the changes to the methods of FarmMethods as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      8. Made all the changes to the methods of Human as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      9. Made all the changes to the methods of Pig as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      10. Made all the changes to the methods of PoopCollector as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.
      11. Made all the changes to the methods of Wind as indicated by the idea: 1. removed the unused variables.
            2. set the appropraite methods to package private or private 3. Removed unnecessary comments.


###########
# Step 33:

Code Affected: .java file 1. Animals

Flaw: Yellow error shown by the idea.

Fix: 1. Fixed the reverse appearance method by using the string builder.
